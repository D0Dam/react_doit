{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/workspace/react_doit/src/r05/withError.jsx\";\nimport React from 'react';\nimport withStyles, { css } from '../r04/withStyles';\nexport default function (defaultMessage) {\n  return WrappedComponent => {\n    const {\n      displayName,\n      name: componentName\n    } = WrappedComponent;\n    const wrappedComponentName = displayName || componentName;\n\n    function ComponentWithError({\n      hasError,\n      errorMessage,\n      styles,\n      ...props\n    }) {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(WrappedComponent, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 5\n        }, this), hasError && /*#__PURE__*/_jsxDEV(\"div\", { ...css(styles.error),\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 4\n      }, this);\n    }\n\n    ;\n    ComponentWithError.defaultProps = {\n      errorMessage: defaultMessage\n    };\n    ComponentWithError.displayName = `withError(${wrappedComponentName})`;\n    return withStyles(({\n      color\n    }) => ({\n      error: {\n        color: color.error\n      }\n    }))(ComponentWithError);\n  };\n}","map":{"version":3,"sources":["/workspace/react_doit/src/r05/withError.jsx"],"names":["React","withStyles","css","defaultMessage","WrappedComponent","displayName","name","componentName","wrappedComponentName","ComponentWithError","hasError","errorMessage","styles","props","error","defaultProps","color"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,IAAqBC,GAArB,QAAgC,mBAAhC;AAEA,eAAe,UAASC,cAAT,EAAyB;AACvC,SAAOC,gBAAgB,IAAI;AAC1B,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA,IAAI,EAAEC;AAArB,QAAuCH,gBAA7C;AACA,UAAMI,oBAAoB,GAAGH,WAAW,IAAIE,aAA5C;;AAEA,aAASE,kBAAT,CAA4B;AAC3BC,MAAAA,QAD2B;AAE3BC,MAAAA,YAF2B;AAG3BC,MAAAA,MAH2B;AAI3B,SAAGC;AAJwB,KAA5B,EAKG;AACF,0BACA,QAAC,KAAD,CAAO,QAAP;AAAA,gCACC,QAAC,gBAAD,OAAsBA;AAAtB;AAAA;AAAA;AAAA;AAAA,gBADD,EAEEH,QAAQ,iBAAI,oBAASR,GAAG,CAACU,MAAM,CAACE,KAAR,CAAZ;AAAA,oBAA6BH;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAFd;AAAA;AAAA;AAAA;AAAA;AAAA,cADA;AAMA;;AAAA;AAEDF,IAAAA,kBAAkB,CAACM,YAAnB,GAAkC;AACjCJ,MAAAA,YAAY,EAAER;AADmB,KAAlC;AAIAM,IAAAA,kBAAkB,CAACJ,WAAnB,GAAkC,aAAYG,oBAAqB,GAAnE;AACA,WAAOP,UAAU,CAAC,CAAC;AAAEe,MAAAA;AAAF,KAAD,MAAgB;AACjCF,MAAAA,KAAK,EAAE;AACNE,QAAAA,KAAK,EAAEA,KAAK,CAACF;AADP;AAD0B,KAAhB,CAAD,CAAV,CAIHL,kBAJG,CAAP;AAKA,GA5BD;AA6BA","sourcesContent":["import React from 'react';\nimport withStyles, { css } from '../r04/withStyles';\n\nexport default function(defaultMessage) {\n\treturn WrappedComponent => {\n\t\tconst { displayName, name: componentName } = WrappedComponent;\n\t\tconst wrappedComponentName = displayName || componentName;\n\t\t\n\t\tfunction ComponentWithError({\n\t\t\thasError,\n\t\t\terrorMessage,\n\t\t\tstyles,\n\t\t\t...props\n\t\t}) {\n\t\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<WrappedComponent {...props} />\n\t\t\t\t{hasError && <div {...css(styles.error)}>{errorMessage}</div>}\n\t\t\t</React.Fragment>\n\t\t\t);\n\t\t};\n\t\t\n\t\tComponentWithError.defaultProps = {\n\t\t\terrorMessage: defaultMessage\n\t\t};\n\t\t\n\t\tComponentWithError.displayName = `withError(${wrappedComponentName})`;\n\t\treturn withStyles(({ color }) => ({\n\t\t\terror: {\n\t\t\t\tcolor: color.error,\n\t\t\t},\n\t\t}))(ComponentWithError);\n\t};\n}"]},"metadata":{},"sourceType":"module"}