{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/workspace/react_doit/src/r04/InputWithStyle.jsx\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Input extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.setRef = this.setRef.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    const {\n      name,\n      onChange\n    } = this.props;\n\n    if (onChange) {\n      onChange(name, e.target.value);\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.autoFocus) {\n      this.ref.focus();\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.props.autoFocus) {\n      this.ref.focus();\n    }\n  }\n\n  setRef(ref) {\n    this.ref = ref;\n  }\n\n  render() {\n    const {\n      errorMessage,\n      label,\n      name,\n      value,\n      type,\n      onFocus\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: `input_${name}`,\n        className: `validate ${errorMessage && 'invalid'}`,\n        ref: this.setRef,\n        onChange: this.handleChange,\n        onFocus: onFocus,\n        value: value,\n        type: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"active\",\n        for: `input_${name}`,\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 3\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"helper-text\",\n        \"data-error\": errorMessage,\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nInput.propTypes = {\n  type: PropTypes.oneOf(['text', 'number', 'price']),\n  name: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  errorMessage: PropTypes.string,\n  label: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  autoFocus: PropTypes.bool\n};\nInput.defaultProps = {\n  onChange: () => {},\n  onFocus: () => {},\n  autoFocus: false,\n  type: 'text'\n};\nexport default Input;","map":{"version":3,"sources":["/workspace/react_doit/src/r04/InputWithStyle.jsx"],"names":["React","PureComponent","PropTypes","Input","constructor","props","setRef","bind","handleChange","e","name","onChange","target","value","componentDidMount","autoFocus","ref","focus","componentDidUpdate","render","errorMessage","label","type","onFocus","propTypes","oneOf","string","isRequired","oneOfType","number","func","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Input extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.setRef = this.setRef.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(e) {\n    const { name, onChange } = this.props;\n    if (onChange) {\n      onChange(name, e.target.value)\n    }\n  }\n  componentDidMount() {\n    if (this.props.autoFocus) {\n      this.ref.focus();\n    }\n  }\n  componentDidUpdate() {\n    if (this.props.autoFocus) {\n      this.ref.focus();\n    }\n  }\n  setRef(ref) {\n    this.ref = ref;\n  }\n  render() {\n    const { errorMessage, label, name, value, type, onFocus } = this.props;\n    return (\n      <div className=\"input-field\">\n        <input\n          id={`input_${name}`}\n\t\t\t\t\tclassName={`validate ${errorMessage && 'invalid'}`}\n          ref={this.setRef}\n          onChange={this.handleChange}\n          onFocus={onFocus}\n          value={value}\n          type={type}\n        />\n\t\t<label className=\"active\" for={`input_${name}`}>\n\t\t\t{label}\n\t\t</label>\n        {errorMessage && <span className=\"helper-text\" data-error={errorMessage}>{errorMessage}</span>}\n      </div>\n    );\n  }\n}\n\nInput.propTypes = {\n  type: PropTypes.oneOf(['text', 'number', 'price']),\n  name: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  errorMessage: PropTypes.string,\n  label: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  autoFocus: PropTypes.bool,\n};\nInput.defaultProps = {\n  onChange: () => {},\n  onFocus: () => {},\n  autoFocus: false,\n  type: 'text',\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}