{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/workspace/react_doit/src/r04/CheckBox.jsx\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles, { css } from './withStyles';\n\nclass CheckBox extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.setRef = this.setRef.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.autoFocus) {\n      this.ref.focus();\n    }\n  }\n\n  handleClick(e) {\n    const {\n      name,\n      onChange\n    } = this.props;\n    onChange(name, e.target.checked);\n  }\n\n  setRef(ref) {\n    this.ref = ref;\n  }\n\n  render() {\n    const {\n      errorMessage,\n      label,\n      children,\n      styles,\n      checked\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [label, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: this.setRef,\n          type: \"checkbox\",\n          checked: checked && 'checked',\n          onClick: this.handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), children]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", { ...css(styles.errorText),\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nCheckBox.propTypes = {\n  name: PropTypes.string.isRequired,\n  autoFocus: PropTypes.bool,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func\n};\nCheckBox.defaultProps = {\n  autoFocus: false,\n  checked: false,\n  onChange: () => {}\n};\nexport default withStyles(({\n  color,\n  size\n}) => ({\n  errorText: {\n    fontSize: size.sm,\n    color: color.error\n  }\n}))(CheckBox);","map":{"version":3,"sources":["/workspace/react_doit/src/r04/CheckBox.jsx"],"names":["React","PureComponent","PropTypes","withStyles","css","CheckBox","constructor","props","setRef","bind","handleClick","componentDidMount","autoFocus","ref","focus","e","name","onChange","target","checked","render","errorMessage","label","children","styles","errorText","propTypes","string","isRequired","bool","func","defaultProps","color","size","fontSize","sm","error"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,IAAqBC,GAArB,QAAgC,cAAhC;;AAEA,MAAMC,QAAN,SAAuBJ,aAAvB,CAAqC;AACnCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AACDE,EAAAA,iBAAiB,GAAG;AAClB,QAAI,KAAKJ,KAAL,CAAWK,SAAf,EAA0B;AACxB,WAAKC,GAAL,CAASC,KAAT;AACD;AACF;;AACDJ,EAAAA,WAAW,CAACK,CAAD,EAAI;AACb,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAqB,KAAKV,KAAhC;AACAU,IAAAA,QAAQ,CAACD,IAAD,EAAOD,CAAC,CAACG,MAAF,CAASC,OAAhB,CAAR;AACD;;AACDX,EAAAA,MAAM,CAACK,GAAD,EAAM;AACV,SAAKA,GAAL,GAAWA,GAAX;AACD;;AACDO,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,YADI;AAEJC,MAAAA,KAFI;AAGJC,MAAAA,QAHI;AAIJC,MAAAA,MAJI;AAKJL,MAAAA;AALI,QAMF,KAAKZ,KANT;AAOA,wBACE;AAAA,iBACGe,KADH,eAEE;AAAA,gCACE;AACE,UAAA,GAAG,EAAE,KAAKd,MADZ;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,OAAO,EAAEW,OAAO,IAAI,SAHtB;AAIE,UAAA,OAAO,EAAE,KAAKT;AAJhB;AAAA;AAAA;AAAA;AAAA,gBADF,EAOGa,QAPH;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAWGF,YAAY,iBACX;AAAA,+BACE,qBAAUjB,GAAG,CAACoB,MAAM,CAACC,SAAR,CAAb;AAAA,oBAAkCJ;AAAlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD;;AA7CkC;;AAgDrChB,QAAQ,CAACqB,SAAT,GAAqB;AACnBV,EAAAA,IAAI,EAAEd,SAAS,CAACyB,MAAV,CAAiBC,UADJ;AAEnBhB,EAAAA,SAAS,EAAEV,SAAS,CAAC2B,IAFF;AAGnBV,EAAAA,OAAO,EAAEjB,SAAS,CAAC2B,IAHA;AAInBZ,EAAAA,QAAQ,EAAEf,SAAS,CAAC4B;AAJD,CAArB;AAMAzB,QAAQ,CAAC0B,YAAT,GAAwB;AACtBnB,EAAAA,SAAS,EAAE,KADW;AAEtBO,EAAAA,OAAO,EAAE,KAFa;AAGtBF,EAAAA,QAAQ,EAAE,MAAM,CAAE;AAHI,CAAxB;AAMA,eAAed,UAAU,CAAC,CAAC;AAAE6B,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,MAAsB;AAC9CR,EAAAA,SAAS,EAAE;AACTS,IAAAA,QAAQ,EAAED,IAAI,CAACE,EADN;AAETH,IAAAA,KAAK,EAAEA,KAAK,CAACI;AAFJ;AADmC,CAAtB,CAAD,CAAV,CAKX/B,QALW,CAAf","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles, { css } from './withStyles';\n\nclass CheckBox extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.setRef = this.setRef.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n  componentDidMount() {\n    if (this.props.autoFocus) {\n      this.ref.focus();\n    }\n  }\n  handleClick(e) {\n    const { name, onChange } = this.props;\n    onChange(name, e.target.checked);\n  }\n  setRef(ref) {\n    this.ref = ref;\n  }\n  render() {\n    const {\n      errorMessage,\n      label,\n      children,\n      styles,\n      checked,\n    } = this.props;\n    return (\n      <label>\n        {label}\n        <div>\n          <input\n            ref={this.setRef}\n            type=\"checkbox\"\n            checked={checked && 'checked'}\n            onClick={this.handleClick}\n          />\n          {children}\n        </div>\n        {errorMessage && (\n          <div>\n            <span {...css(styles.errorText)}>{errorMessage}</span>\n          </div>\n        )}\n      </label>\n    );\n  }\n}\n\nCheckBox.propTypes = {\n  name: PropTypes.string.isRequired,\n  autoFocus: PropTypes.bool,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func,\n};\nCheckBox.defaultProps = {\n  autoFocus: false,\n  checked: false,\n  onChange: () => {},\n};\n\nexport default withStyles(({ color, size }) => ({\n  errorText: {\n    fontSize: size.sm,\n    color: color.error,\n  },\n}))(CheckBox);"]},"metadata":{},"sourceType":"module"}