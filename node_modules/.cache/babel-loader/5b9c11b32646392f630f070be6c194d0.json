{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/workspace/react_doit/src/r06/Form.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from './FormContext';\n\nclass FormProvider extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      values: {},\n      errors: {}\n    };\n    this.reset = this.reset.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.submit = this.submit.bind(this);\n  }\n\n  onChange(name, updatedValue) {\n    this.setState(({\n      values\n    }) => ({\n      values: { ...values,\n        [name]: updatedValue\n      }\n    }), () => this.validate(this.state.values));\n  }\n\n  reset() {\n    this.setState({\n      values: {},\n      errors: {}\n    });\n  }\n\n  submit() {\n    this.props.onSubmit(this.state.values);\n  }\n\n  validate(values) {\n    const {\n      validate\n    } = this.props;\n\n    if (!validate) {\n      return;\n    }\n\n    const errors = this.props.validate(values);\n    this.setState({\n      errors\n    });\n  }\n\n  render() {\n    const {\n      values,\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Provider, {\n      value: {\n        errors,\n        values,\n        onChange: this.onChange,\n        reset: this.reset,\n        submit: this.submit\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nFormProvider.propTypes = {\n  validate: PropTypes.func,\n  onSubmit: PropTypes.func.isRequired\n};\nFormProvider.defaultProps = {\n  validate: () => ({})\n};\nexport default FormProvider;","map":{"version":3,"sources":["/workspace/react_doit/src/r06/Form.jsx"],"names":["React","PropTypes","Provider","FormProvider","PureComponent","constructor","props","state","values","errors","reset","bind","onChange","submit","name","updatedValue","setState","validate","onSubmit","render","children","propTypes","func","isRequired","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,QAAT,QAAyB,eAAzB;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,aAAjC,CAA+C;AAC7CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAAb;AAIA,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAb;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKE,MAAL,GAAc,KAAKA,MAAL,CAAYF,IAAZ,CAAiB,IAAjB,CAAd;AACD;;AAEDC,EAAAA,QAAQ,CAACE,IAAD,EAAOC,YAAP,EAAqB;AAC3B,SAAKC,QAAL,CACE,CAAC;AAAER,MAAAA;AAAF,KAAD,MAAiB;AACfA,MAAAA,MAAM,EAAE,EACN,GAAGA,MADG;AAEN,SAACM,IAAD,GAAQC;AAFF;AADO,KAAjB,CADF,EAOE,MAAM,KAAKE,QAAL,CAAc,KAAKV,KAAL,CAAWC,MAAzB,CAPR;AASD;;AAEDE,EAAAA,KAAK,GAAG;AACN,SAAKM,QAAL,CAAc;AAAER,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,MAAM,EAAE;AAAtB,KAAd;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,SAAKP,KAAL,CAAWY,QAAX,CAAoB,KAAKX,KAAL,CAAWC,MAA/B;AACD;;AAEDS,EAAAA,QAAQ,CAACT,MAAD,EAAS;AACf,UAAM;AAAES,MAAAA;AAAF,QAAe,KAAKX,KAA1B;;AACA,QAAI,CAACW,QAAL,EAAe;AACb;AACD;;AACD,UAAMR,MAAM,GAAG,KAAKH,KAAL,CAAWW,QAAX,CAAoBT,MAApB,CAAf;AACA,SAAKQ,QAAL,CAAc;AACZP,MAAAA;AADY,KAAd;AAGD;;AAEDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEX,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAqB,KAAKF,KAAhC;AACA,wBACE,QAAC,QAAD;AACE,MAAA,KAAK,EAAE;AACLE,QAAAA,MADK;AAELD,QAAAA,MAFK;AAGLI,QAAAA,QAAQ,EAAE,KAAKA,QAHV;AAILF,QAAAA,KAAK,EAAE,KAAKA,KAJP;AAKLG,QAAAA,MAAM,EAAE,KAAKA;AALR,OADT;AAAA,gBASG,KAAKP,KAAL,CAAWc;AATd;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AA1D4C;;AA6D/CjB,YAAY,CAACkB,SAAb,GAAyB;AACvBJ,EAAAA,QAAQ,EAAEhB,SAAS,CAACqB,IADG;AAEvBJ,EAAAA,QAAQ,EAAEjB,SAAS,CAACqB,IAAV,CAAeC;AAFF,CAAzB;AAKApB,YAAY,CAACqB,YAAb,GAA4B;AAC1BP,EAAAA,QAAQ,EAAE,OAAO,EAAP;AADgB,CAA5B;AAIA,eAAed,YAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Provider } from './FormContext';\n\nclass FormProvider extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      values: {},\n      errors: {},\n    };\n    this.reset = this.reset.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.submit = this.submit.bind(this);\n  }\n\n  onChange(name, updatedValue) {\n    this.setState(\n      ({ values }) => ({\n        values: {\n          ...values,\n          [name]: updatedValue,\n        },\n      }),\n      () => this.validate(this.state.values),\n    );\n  }\n\n  reset() {\n    this.setState({ values: {}, errors: {} });\n  }\n\n  submit() {\n    this.props.onSubmit(this.state.values);\n  }\n\n  validate(values) {\n    const { validate } = this.props;\n    if (!validate) {\n      return;\n    }\n    const errors = this.props.validate(values);\n    this.setState({\n      errors,\n    });\n  }\n\n  render() {\n    const { values, errors } = this.state;\n    return (\n      <Provider\n        value={{\n          errors,\n          values,\n          onChange: this.onChange,\n          reset: this.reset,\n          submit: this.submit,\n        }}\n      >\n        {this.props.children}\n      </Provider>\n    );\n  }\n}\n\nFormProvider.propTypes = {\n  validate: PropTypes.func,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nFormProvider.defaultProps = {\n  validate: () => ({}),\n};\n\nexport default FormProvider;"]},"metadata":{},"sourceType":"module"}