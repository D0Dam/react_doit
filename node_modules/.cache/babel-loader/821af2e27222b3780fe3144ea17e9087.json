{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/workspace/react_doit/src/r04/InputWithStyle.jsx\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Input extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.setRef = this.setRef.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    const {\n      name,\n      onChange\n    } = this.props;\n\n    if (onChange) {\n      onChange(name, e.target.value);\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.autoFocus) {\n      this.ref.focus();\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.props.autoFocus) {\n      this.ref.focus();\n    }\n  }\n\n  setRef(ref) {\n    this.ref = ref;\n  }\n\n  render() {\n    const {\n      errorMessage,\n      label,\n      name,\n      value,\n      type\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: `input_${name}`,\n        ref: this.setRef,\n        onChange: this.handleChange,\n        value: value,\n        type: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `input_${name}`,\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 3\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"helper-text\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nInput.propTypes = {\n  type: PropTypes.oneOf(['text', 'number', 'price']),\n  name: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  errorMessage: PropTypes.string,\n  label: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  autoFocus: PropTypes.bool\n};\nInput.defaultProps = {\n  onChange: () => {},\n  onFocus: () => {},\n  autoFocus: false,\n  type: 'text'\n};\nexport default Input;","map":{"version":3,"sources":["/workspace/react_doit/src/r04/InputWithStyle.jsx"],"names":["React","PureComponent","PropTypes","Input","constructor","props","setRef","bind","handleChange","e","name","onChange","target","value","componentDidMount","autoFocus","ref","focus","componentDidUpdate","render","errorMessage","label","type","propTypes","oneOf","string","isRequired","oneOfType","number","func","onFocus","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Input extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.setRef = this.setRef.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(e) {\n    const { name, onChange } = this.props;\n    if (onChange) {\n      onChange(name, e.target.value)\n    }\n  }\n  componentDidMount() {\n    if (this.props.autoFocus) {\n      this.ref.focus();\n    }\n  }\n  componentDidUpdate() {\n    if (this.props.autoFocus) {\n      this.ref.focus();\n    }\n  }\n  setRef(ref) {\n    this.ref = ref;\n  }\n  render() {\n    const { errorMessage, label, name, value, type } = this.props;\n    return (\n      <div className=\"input-field\">\n        <input\n          id={`input_${name}`}\n          ref={this.setRef}\n          onChange={this.handleChange}\n          value={value}\n          type={type}\n        />\n\t\t<label htmlFor={`input_${name}`}>\n\t\t\t{label}\n\t\t</label>\n        {errorMessage && <span className=\"helper-text\">{errorMessage}</span>}\n      </div>\n    );\n  }\n}\n\nInput.propTypes = {\n  type: PropTypes.oneOf(['text', 'number', 'price']),\n  name: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  errorMessage: PropTypes.string,\n  label: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  autoFocus: PropTypes.bool,\n};\nInput.defaultProps = {\n  onChange: () => {},\n  onFocus: () => {},\n  autoFocus: false,\n  type: 'text',\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}